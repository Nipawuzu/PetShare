name: Build and deploy backed API

on:
  workflow_call:
    inputs:
      path_to_project:
        default: apis/
        type: string
      project_name:
        required: true
        type: string
      dev_deploy:
        required: false
        type: boolean
        default: false
    secrets:
      azure_app_service_publish_profile:
        required: true
      adopter_api_secrets:
        required: true
      files_secrets:
        required: true

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ${{inputs.path_to_project}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'
      # - name: Create file storage json
      #   id: file-storage-json
      #   uses: jsdaniell/create-json@v1.2.2
      #   with:
      #     name: "files.json"
      #     json: ${{ secrets.files_secrets }}
      #     dir: /apis
      # - name: Set up Files secrets
      #   run: type files.json | dotnet user-secrets set --project .\FileStorageService\
      # - name: Create adopter json
      #   id: adopter-storage-json
      #   uses: jsdaniell/create-json@v1.2.2
      #   with:
      #     name: "adopter.json"
      #     json: ${{ secrets.adopter_api_secrets }}
      #     dir: /apis
      # - name: Set up Adopter secrets
      #   run: type adopter.json | dotnet user-secrets set --project .\AdopterAPI\
      - name: Build with dotnet
        run: dotnet build --configuration Release ${{inputs.project_name}}
      - name: dotnet publish
        run: dotnet publish ${{inputs.project_name}} -c Release -o ${{env.DOTNET_ROOT}}/${{inputs.project_name}}
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: ${{inputs.project_name}}
          path: ${{env.DOTNET_ROOT}}/${{inputs.project_name}}

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    env:
      APP_NAME: 'petshare-${{inputs.project_name}}'

    steps:
      - name: Set dev app name
        if: ${{inputs.dev_deploy}}
        run: |
          chcp 65001 #set code page to utf-8
          echo ("APP_NAME=" + $env:APP_NAME + "-dev") >> $env:GITHUB_ENV

      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: ${{inputs.project_name}}
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{env.APP_NAME}}
          slot-name: 'Production'
          publish-profile: ${{secrets.azure_app_service_publish_profile}}
          package: .
          images: ""
